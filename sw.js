const CACHE_NAME="laporan-v1",urlsToCache=["/","/app.bundle.js","/styles.css","/manifest.json","/favicon.png","/images/logo.png","/images/placeholder-image.jpg","https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap","https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css"];self.addEventListener("install",(e=>{console.log("Service Worker: Installing..."),e.waitUntil(caches.open(CACHE_NAME).then((e=>(console.log("Service Worker: Caching files"),e.addAll(urlsToCache)))).catch((e=>{console.log("Service Worker: Caching failed",e)})))})),self.addEventListener("activate",(e=>{console.log("Service Worker: Activating..."),e.waitUntil(caches.keys().then((e=>Promise.all(e.map((e=>{if(e!==CACHE_NAME)return console.log("Service Worker: Deleting old cache",e),caches.delete(e)}))))))})),self.addEventListener("fetch",(e=>{"GET"===e.request.method&&e.request.url.startsWith("http")&&(e.request.url.includes("story-api.dicoding.dev")?e.respondWith(fetch(e.request).then((t=>{const a=t.clone();return caches.open(CACHE_NAME).then((t=>{t.put(e.request,a)})).catch((e=>console.error("Failed to cache API response:",e))),t})).catch((async()=>{const t=await caches.match(e.request);if(t)return t;throw new Error("No cached data available")}))):e.respondWith(caches.match(e.request).then((t=>t?(fetch(e.request).then((t=>{caches.open(CACHE_NAME).then((a=>{a.put(e.request,t)})).catch((e=>console.error("Failed to update cache:",e)))})).catch((()=>{})),t):fetch(e.request).then((t=>{const a=t.clone();return caches.open(CACHE_NAME).then((t=>{t.put(e.request,a)})).catch((e=>console.error("Failed to cache response:",e))),t})))).catch((()=>"image"===e.request.destination?caches.match("/images/placeholder-image.jpg"):"document"===e.request.destination?caches.match("/"):void 0))))})),self.addEventListener("push",(e=>{console.log("Service Worker: Push received");let t={};if(e.data)try{t=e.data.json()}catch(a){t={title:"Laporan",body:e.data.text()||"Ada laporan baru untuk Anda!",icon:"/favicon.png",badge:"/favicon.png",data:{url:"/"}}}else t={title:"Laporan",body:"Ada laporan baru untuk Anda!",icon:"/favicon.png",badge:"/favicon.png",data:{url:"/"}};const a={title:t.title||"Laporan",body:t.body||"Ada laporan baru untuk Anda!",icon:t.icon||"/favicon.png",badge:t.badge||"/favicon.png",vibrate:[100,50,100],data:t.data||{url:"/"},actions:[{action:"open",title:"Buka Aplikasi",icon:"/favicon.png"},{action:"close",title:"Tutup"}]};e.waitUntil(self.registration.showNotification(a.title,a))})),self.addEventListener("notificationclick",(e=>{if(console.log("Service Worker: Notification clicked"),e.notification.close(),"close"===e.action)return;const t=e.notification.data?.url||"/";e.waitUntil(clients.matchAll({type:"window",includeUncontrolled:!0}).then((e=>{for(const a of e)if(a.url.includes(t)&&"focus"in a)return a.focus();if(clients.openWindow)return clients.openWindow(t)})))})),self.addEventListener("sync",(e=>{console.log("Service Worker: Background sync",e.tag),"background-sync"===e.tag&&e.waitUntil(console.log("Service Worker: Performing background sync"))})),self.addEventListener("message",(e=>{console.log("Service Worker: Message received",e.data),e.data&&"SKIP_WAITING"===e.data.type&&self.skipWaiting()}));